# GitLab CI/CD for RSS 알림 스케줄러
# GitHub Actions와 동일한 스펙으로 구현된 RSS 알림 시스템
# 
# 스케줄 실행:
# GitLab: Project Settings > CI/CD > Schedules 에서 설정
# - */1 * * * * : 1분마다 실행 (테스트용)
# - 0 0 * * * : 매일 KST 09:00 (UTC 00:00)
# - 0 3 * * * : 매일 KST 12:00 (UTC 03:00)
# - 0 6 * * * : 매일 KST 15:00 (UTC 06:00)
# - 0 9 * * * : 매일 KST 18:00 (UTC 09:00)

# 스테이지 정의
stages:
  - notify

# 기본 이미지 설정
image: node:20-alpine

# 전역 변수 설정
variables:
  TZ: "Asia/Seoul"
  NODE_ENV: "production"
  LOG_LEVEL: "debug"  # 디버그 로그 활성화
  CI: "true"  # CI 환경 명시 (파일 캐시 모드 활성화)
  PNPM_CACHE_FOLDER: ".pnpm-store"
  npm_config_cache: ".pnpm-store"
  # 날짜 변수 (캐시 키용)
  CACHE_DATE: "${CI_PIPELINE_CREATED_AT}"

# 캐시 설정 (GitHub Actions cache와 동등)
cache:
  key:
    files:
      - package.json
      - pnpm-lock.yaml
    prefix: "rss-daily-cache-${CI_COMMIT_REF_SLUG}"
  paths:
    - .pnpm-store/
    - node_modules/
    - .cache/
  policy: pull-push

# Job 기본 설정
default:
  timeout: 30m
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  before_script:
    # 시스템 설정
    - echo "🚀 GitLab CI/CD RSS 알림 시스템 시작"
    - apk update && apk add --no-cache tzdata jq
    - cp /usr/share/zoneinfo/Asia/Seoul /etc/localtime
    - echo "Asia/Seoul" > /etc/timezone
    - date '+%Y-%m-%d %H:%M:%S %Z'
    
    # pnpm 설치
    - echo "📦 pnpm 설치"
    - corepack enable
    - corepack prepare pnpm@10.14.0 --activate
    - pnpm config set store-dir .pnpm-store
    
    # 의존성 설치
    - echo "📦 의존성 설치"
    - pnpm install --frozen-lockfile
    
    # 캐시 디렉토리 생성 (없는 경우)
    - |
      if [ ! -d ".cache" ]; then
        mkdir -p .cache
        echo '{}' > .cache/rss-daily-cache.json
        echo "📂 캐시 디렉토리 및 파일 생성 완료"
      fi
    
    # 환경 변수 파일 생성
    - |
      cat > .env << EOF
      TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      WEBHOOK_SECRET=${WEBHOOK_SECRET}
      NODE_ENV=production
      LOG_LEVEL=info
      TZ=Asia/Seoul
      PORT=3000
      RSS_SCHEDULE_CRON=30 8 * * *
      CI=true
      EOF
    
    # 환경 변수 확인 (디버깅용)
    - |
      echo "📋 환경 변수 설정 확인:"
      echo "   - Environment: ${CI_ENVIRONMENT_NAME:-production}"
      echo "   - NODE_ENV: $NODE_ENV"
      echo "   - LOG_LEVEL: $LOG_LEVEL"
      echo "   - TZ: $TZ"
      echo "   - CI: $CI"
      if [ -n "$TELEGRAM_BOT_TOKEN" ]; then
        echo "   - TELEGRAM_BOT_TOKEN: ✅ 설정됨"
      else
        echo "   - TELEGRAM_BOT_TOKEN: ❌ 누락"
      fi
      if [ -n "$TELEGRAM_CHAT_ID" ]; then
        echo "   - TELEGRAM_CHAT_ID: ✅ 설정됨"
      else
        echo "   - TELEGRAM_CHAT_ID: ❌ 누락"
      fi
      echo "   - 실행 시간: $(date +'%Y-%m-%d %H:%M:%S %Z')"

# RSS 알림 실행 - 스케줄 기반
rss-notification-scheduled:
  stage: notify
  script:
    - echo "⏰ 스케줄 실행"
    - echo "📅 필터 날짜: 최근 1일"
    - echo "💾 캐시 모드: 파일 (CI=true)"
    
    # RSS 알림 실행 (캐시 사용)
    - export CI=true
    - node index.js --filter-days=1
    
    # 캐시 파일 상태 확인
    - |
      echo "📂 캐시 파일 확인:"
      if [ -f .cache/rss-daily-cache.json ]; then
        echo "   - 캐시 파일 존재 ✅"
        echo "   - 파일 크기: $(du -h .cache/rss-daily-cache.json | cut -f1)"
        echo "   - 캐시 통계:"
        CACHE_SIZE=$(jq 'to_entries | map(.value | length) | add' .cache/rss-daily-cache.json 2>/dev/null || echo "0")
        echo "     총 캐시된 항목: ${CACHE_SIZE}개"
      else
        echo "   - 캐시 파일 없음 ⚠️"
      fi
    
    - echo "✅ RSS 알림 완료 - $(date '+%Y-%m-%d %H:%M:%S %Z')"
  only:
    - schedules
  environment:
    name: production
    url: https://gitlab.com/${CI_PROJECT_PATH}

# RSS 알림 실행 - 수동 실행 (once 모드)
rss-notification-manual:
  stage: notify
  script:
    - echo "🚀 수동 실행 모드"
    - echo "📅 필터 날짜: 최근 1일"
    - echo "💾 캐시 모드: 파일 (CI=true)"
    
    # RSS 알림 실행 (캐시 사용)
    - export CI=true
    - node index.js --filter-days=1
    
    # 캐시 파일 상태 확인
    - |
      echo "📂 캐시 파일 확인:"
      if [ -f .cache/rss-daily-cache.json ]; then
        echo "   - 캐시 파일 존재 ✅"
        echo "   - 파일 크기: $(du -h .cache/rss-daily-cache.json | cut -f1)"
        echo "   - 캐시 통계:"
        CACHE_SIZE=$(jq 'to_entries | map(.value | length) | add' .cache/rss-daily-cache.json 2>/dev/null || echo "0")
        echo "     총 캐시된 항목: ${CACHE_SIZE}개"
      else
        echo "   - 캐시 파일 없음 ⚠️"
      fi
    
    - echo "✅ RSS 알림 완료 - $(date '+%Y-%m-%d %H:%M:%S %Z')"
  when: manual
  only:
    - main
    - master
    - develop
  environment:
    name: production
    url: https://gitlab.com/${CI_PROJECT_PATH}

# 실행 후 정리
after_script:
  - |
    echo "📊 실행 요약:"
    echo "   - 실행 시간: $(date +'%Y-%m-%d %H:%M:%S %Z')"
    echo "   - 파이프라인 ID: $CI_PIPELINE_ID"
    echo "   - 작업 상태: $CI_JOB_STATUS"
  - |
    if [ "$CI_JOB_STATUS" = "success" ]; then
      echo "✅ RSS 알림 실행 완료"
    else
      echo "❌ RSS 알림 실행 실패"
      echo "   - 오류 발생 시점을 확인하세요"
    fi
  - |
    if [ -f ".env" ]; then
      rm -f .env
      echo "🧹 환경 변수 파일 정리 완료"
    fi